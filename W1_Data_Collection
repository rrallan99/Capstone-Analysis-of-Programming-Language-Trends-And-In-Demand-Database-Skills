import requests # you need this module to make an API call
import pandas as pd
api_url="http://127.0.0.1:5000/data"

#get number of jobs for a technology
def get_number_of_jobs_T(technology):
    payload={"Key Skills": technology}
    response=requests.get(api_url, params=payload)
    if response.ok:
        data=response.json()

        number_of_jobs = len(data)
  
    return technology,number_of_jobs

#get nuber of jobs for a location
def get_number_of_jobs_L(location):
    payload={"Location":location}
    response=requests.get(api_url, params=payload)
    if response.ok:
        data=response.json()
#         print(data)
        number_of_jobs = len(data)
    #your coe goes here
    return location,number_of_jobs

cities = ['Los Angeles', 'New York', 'San Francisco', 'Washington DC', 'Seattle', 'Austin', 'Detroit']

wb=Workbook()
ws=wb.active
ws.append(cities)

def get_number_of_jobs_TL(technology, countries):
    number_of_jobs_list = []
    for location in countries:
        payload={"Key Skills": technology, "Location": location}
        response=requests.get(api_url, params=payload)
        if response.ok:
            data=response.json()
            number_of_jobs = len(data)
            number_of_jobs_list.append(number_of_jobs)
    return number_of_jobs_list
#     return ws.append(number_of_jobs_list)

get_number_of_jobs_TL("Python", cities)
#save to excel spread sheet
wb.save('job-postings.xlsx')

#do the same thing with programming languages
technologies = [' C ', ' C|', 'C#', 'c#', 'C++', 'c++', 'Java ', 'Java|', 'java|','java ', 'JAVA ', 'JAVA|', 'JavaScript', 'Javascript','javascript', 'Python', 'Scala', 'SCALA', 'scala', 'Oracle', 'oracle', \
                ' SQL Server', ' sql', ' SQL', '|sql', '|SQL', 'MySQL', 'mysql', 'Mysql','PostgreSQL', 'PostGreSQL','postgresql','MongoDB', 'mongodb', 'MongoDb']

def get_number_of_jobs_TL(technologies, countries):
    final_list = []
    for technology in technologies:
        number_of_jobs_list = [technology]
        for location in countries:
            payload={"Key Skills": technology, "Location": location}
            response=requests.get(api_url, params=payload)
            if response.ok:
                data=response.json()
                number_of_jobs = len(data)
                number_of_jobs_list.append(number_of_jobs)
#         print(number_of_jobs_list)
        final_list.append(number_of_jobs_list)
    return final_list

get_number_of_jobs_TL(technologies, countries)

### WEB SCRAPING!! ###
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DA0321EN-SkillsNetwork/labs/datasets/Programming_Languages.html"
# Import required Libraries
from bs4 import BeautifulSoup
import requests
import pandas as pd
#request url
page= requests.get(url)
#create beautiful soup object
soup= BeautifulSoup(page.text, 'html')
#scrape language name and annual average salary
pop_lingo = pd.DataFrame(columns=["No.", "Language", "Created By", "Average Annual Salary","Learning Difficulty"])
pop_lingo = pd.read_html(url)
read_html_pandas_data = pd.read_html(url)
pop_lingo = read_html_pandas_data[0]
pop_lingo
#save to csv file
pop_lingo.to_csv(r'C:/Users/rebekahallan/Desktop/popular-languages.csv')

#import libraries and read csv into dataframe
import pandas as pd
dataset_url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DA0321EN-SkillsNetwork/LargeData/m1_survey_data.csv"
df=pd.read_csv(dataset_url)
#show firest 5 rows
df.head()
#count number of rows in df
df.shape[0]
#count number of cols in df
df.shape[1]
#see data types in df
df.dtypes
#show avg age of survey responder
avg_age=df[['Age']].mean()
avg_age
#show number of unique countries in df
unique_countries_list=df.Country.unique()
unique_countries_list
n = len(unique_countries_list)
print("No. of unique Countries:", n)
